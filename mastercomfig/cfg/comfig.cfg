// ~~~~ mastercomfig TF2 config ~~~~
// Version: 4.5.0 | October 20 2017
// ----------------------------------
// You can find preset info at the bottom of the 
// file for things like maximum performance, high
// quality and more!

// If local servers aren't working, enter host_thread_mode 0 in console
// and when you are done, enter host_thread_mode 1

// Launch Options:
// -novid -nojoy -nosteamcontroller -noff -nohltv -softparticlesdefaultoff -reuse -primarysound -snoforceformat -swapcores
//
// -novid : disables Valve startup logo
// -nojoy : stops Joystick system from starting up
// -nosteamcontroller : disable Steam controller system
// -noff : disables rumble system
// -nohltv : disables SourceTV
// -softparticlesdefaultoff : disable depth blending for particles and sprites, more FPS
// -reuse :  allow network sockets to be reused when busy (sets SO_REUSEADDR), better network performance
// -primarysound : always use a direct hardware sound buffer
// -snoforceformat : do not set the hardware sound format
// -swapcores : sets the material system thread to use the 2nd thread and server thread to use the 1st

// Extra Launch Options:
// -threads X : how many worker threads are allowed, set X to CPU logical core count minus two if you have 6 or more cores
// -noforcemaccel -noforcemparms -noforcemspd : uses Windows mouse settings, does not work with raw input
// -console : displays console on startup
// -high : runs TF2 with High priority, which runs tasks ASAP, but not before OS level tasks, more FPS and
//         responsiveness depending on your CPU
// -limitvsconst : limits the hardware vertex shader constants to 256, FPS boost on weak GPUs
// -nouserclip : uses software fast clipping instead of hardware user clip planes, FPS depends on your driver
// -r_emulate_gl : emulates OpenGL, FPS boost on certain cards/drivers for Windows, probably NVidia cards (prevents flamethrower particle fx from rendering!)
// -NoQueuedPacketThread : disable the net queued packet thread, use with net_queued_packet_thread 0

// Niche Launch Options:
// -nosrgb : disables SRGB (limits variety of colors), brighter lighting, flatter colors, FPS boost
// -nops2b : uses pixel shaders 2.0 instead of 2.0b, more frames on really old/bad GPUs
// -nostartupsound : disable game music on main menu
// -nosound : disables sound, no performance boost unless your drivers are slow
// -mat_softwaretl : forces software vertex processing, might be good for bad GPUs, will decrease FPS
//                   otherwise
// -small : allow for resolutions smaller than 640x480
// -nogammaramp : override in-game gamma with your desktop settings, useful if you have an .icc
//                calibration profile

// Experimental Launch Options:
// None at this time.

// '--- Init ---'
mat_dxlevel 95 // Set custom dxlevel presets and then override

// '--- Network ---'
// '-- General --'
cl_cmdrate 66 // Send to server at this many times per second
cl_updaterate 66 // Get from server at this many times per seconds
cl_interp_ratio 1 // Reduce entity interpolation times to minimum
//cl_interp_ratio 2 // Fix lag when experiencing packet loss, 3 or 4 for lots of packet loss
net_queued_packet_thread 1 // Work around bad Windows networking
//net_queued_packet_thread 0 // Send packets without a delay at the end of each frame (slightly more CPU load).
                             // Use with -NoQueuedPacketThread
cl_interp 0 // Use cl_interp_ratio for a more accurate value
net_compresspackets 1 // Compress packets to prevent split packets
//net_compresspackets 0 // Remove CPU load from network packet compression
net_compresspackets_minsize 1260 // Only compress packets if we would send a splitpacket
rate 170016 // High rate to reduce choke and scale to packet rate
            // Might want to lower rate if you have <1.4Mbps stable upload
net_maxcleartime 0.015 // Balance between reducing network delay and choke
//net_maxcleartime 0.001 // Minimum network delay
//net_maxcleartime 5 // Use rate to control packet delay
net_maxpacketdrop 5000 // Use default packet drop threshold
net_splitrate 4 // Split 4 packets per frame, reduces choke but is more CPU intensive
//net_splitrate 2 // Split 2 packets per frame, reduces choke
//net_splitrate 1 // Do not split multiple packets for bad PCs that cannot handle the extra load
net_splitpacket_maxrate 170016 // Scale splitpacket to rate
                               // Might want to lower rate if you have <1.4Mbps stable upload
cl_timeout 70 // Wait the maximum time before automatically timing out on client
cl_pred_optimize 2 // Skip repredicting if we do not need to do it
cl_smooth 1 // Smooth out prediction errors
cl_smoothtime 0.1 // Smooth out view for 0.1 seconds
// '-- Files --'
net_maxfilesize 64 // Max out file upload size for extra content
cl_downloadfilter mapsonly
//cl_downloadfilter none // Skip downloading items due to crashing on Linux
// '-- Matchmaking --'
//tf_mm_custom_ping 100 // The ping tolerance for matchmaking
//tf_mm_custom_ping_enabled 1 // Enable custom ping tolerance
tf_mm_debug_level 0 // Remove matchmaking debug output
tf_mm_partyclient_debug 0 // Remove party debug output
//tf_party_join_request_mode -1 // Mode for party join requests: -1 default (1), 0 - open join, 1 - request join, 2 - invite join
//tf_party_keep_on_same_team 0 // Do not enforce parties being on the same team (not implemented)

// '--- Rendering ---'
// '-- Threading --'
// These settings will take advantage of your CPU cores

cl_threaded_client_leaf_system 1 // Asynchronously add new renderables and compute blends for added
                                 // renderables
//cl_threaded_client_leaf_system 0 // Use traditional behavior for CPUs with 1 core
r_threaded_renderables 1 // Asynchronously set up bones on animated entities
//r_threaded_renderables 0 // Use traditional behavior for CPUs with 1 core
r_threaded_particles 1 // Process particle systems in parallel
//r_threaded_particles 0 // Process particle systems one at a time for CPUs with 1 core
r_threaded_client_shadow_manager 1 // Multithreaded shadow computations/rendering
//r_threaded_client_shadow_manager 0 // Use traditional behavior for CPUs with less than 4 cores
mat_queue_mode 2 // Force multithreaded mode for the material system queue
//mat_queue_mode -1 // Let the engine determine the optimal mode for CPUs with 1 core
studio_queue_mode 1 // Use queue calls for studio renders
//studio_queue_mode 0 // Do not use queue calls for CPUs with 1 core
host_thread_mode 1 // Use the threaded frame behavior

// '-- Material System Queue --'
// These settings will take advantage of the material system, depending on how mat_queue_mode is set

r_queued_decals 0 // Disabled by default due to crashes
//r_queued_decals 1 // Offload decal draws to the material system
                    // Beneficial when decal count is above 256 or you have 4 or more CPU cores
r_queued_post_processing 0 // Disabled by default because it usually fails to render the post processing
                           // effects in time for the frame render
//r_queued_post_processing 1 // Offloads post processing to the material system
                             // Performance improvement if your driver/GPU works with it
r_queued_ropes 1 // Queue some rope rendering using the material system
//r_queued_ropes 0 // Disable queued ropes for CPUs with less than 4 cores

// '-- LOD --'
// Controls the quality of objects based on distance

r_rootlod 1 // Limits how high the model LOD can be, does not offload rendering to CPU like many people
            // believe. Set to 1 for the best balance between model quality and performance.
//r_rootlod 2 // Maximum performance for models
//r_rootlod 0 // Maximum quality for models
lod_TransitionDist -1 // Do not fade in map objects for maximum performance
//lod_TransitionDist -5000 // Fade map objects over a long distance to reduce pop in while still increasing
                           // performance
//lod_TransitionDist -5001 // Fade map objects across a shorter distance to slightly reduce pop in while
                           // still increasing performance
//lod_TransitionDist 800 // Start fading map objects only when they are very far away, decreases
                         // performance but least pop in
r_lod -1 // Use r_rootlod to properly fade through LODs.
//r_lod 63 // Use the lowest LOD possible all the time (will override r_rootlod)
//r_lod 0 // Always use the highest LOD possible
mat_max_worldmesh_vertices 65536 // Use all mesh vertices
//mat_max_worldmesh_vertices 1024 // Reduce mesh vertices to minimum

// '-- Lighting --'
r_ambientboost 1 // Boosts reflected light, gives you vision advantage, especially in darker environments
//r_ambientboost 0 // Disable if you need to save the small amount of CPU this uses
r_ambientmin 0.6 // Allow for ambient boosting even in brighter light levels, makes characters stand out
//r_ambientmin 0.3 // Use TF2 default ambient boost threshold
//r_ambientmin 0.1 // Ambient boost less often, realistic darkness
//r_ambientmin 1.1 // Ambient boost every time
r_rimlight 1 // Rimlighting is a distinct design choice in TF2 for better visibility of classes
//r_rimlight 0 // Disable light around character edges, very small FPS increase, rimlight uses GPU only
mat_phong 1 // Use a phong shader for shading/reflection
//mat_phong 0 // Disable phong for flatter shading
r_lightaverage 0 // Disable this lighting job that uses a lot of CPU even if it is not needed/noticeable
//r_lightaverage 1 // Enable time averaging of lighting to reduce popping
r_dynamic 0 // Disable dynamic lighting (muzzle flash lighting, explosions and other lighted effects)
//r_dynamic 1 // Enable dynamic lighting
r_maxdlights 0 // Do not allow any dynamic lights
//r_maxdlights 9 // Reduce maximum dynamic lights
//r_maxdlights 32 // Use the maximum number of dynamic lights
r_worldlightmin 0.004 // Do not render insignificant world lighting
//r_worldlightmin 1.1 // Reject all world lighting
//r_worldlightmin 0 // Render all world lighting, no matter how insignificant it may be
r_worldlights 0 // Disable world lights
//r_worldlights 2 // Reduce maximum lights applied to a vertex
//r_worldlights 4 // Use the maximum amount of world lights
mat_disable_fancy_blending 1 // Disable fancy blending
//mat_disable_fancy_blending 0 // Enable fancy blending
mat_disable_lightwarp 1 // Disable light warps
//mat_disable_lightwarp 0 // Enable light warps

// '-- Shadows --'
r_shadows 0 // Disable shadows for a big FPS increase
//r_shadows 1 // Enable shadows
r_shadowrendertotexture 0 // Do not use two materials for shadows (uses memory and rendering time)
//r_shadowrendertotexture 1 // Prettier shadows
cl_blobbyshadows 1 // Render a blob for shadows
//cl_blobbyshadows 0 // Get sharper model shape based shadows
r_flashlightdepthres 32 // Reduce the shadow depth texture resolution. Only works when depth textures are
                        // on
//r_flashlightdepthres 4096 // Sharper shadows (alternatively try: 8192, 2048, 1024, 512), higher is
                            // higher quality
r_flashlightdepthtexture 0 // Disable the CPU intensive depth texturing for shadows
//r_flashlightdepthtexture 1 // Even prettier shadows
r_flashlightrender 0 // Disable flashlights
//r_flashlightrender 1 // Enable flashlights
r_flashlightscissor 1 // Disable shadow rendering where it is unneeded
//r_flashlightscissor 0 // Fix some shadows being improperly cut off at the cost of performance
nb_shadow_dist 200  // Do not render shadows from far away (NextBot system)
//nb_shadow_dist 0 // Disable shadow distance
r_shadowmaxrendered 17 // Do not render more shadows than needed
//r_shadowmaxrendered 11 // for 6s
//r_shadowmaxrendered 32 // Render all shadows

// '-- Effects --'
cl_ejectbrass 0 // Disable shell ejection from pistols, shotgun, minigun, etc
//cl_ejectbrass 1 // Enable shell ejection
muzzleflash_light 0 // Disable muzzle flash lights
//muzzleflash_light 1 // Enable muzzle flash lights
cl_muzzleflash_dlight_1st 0 // Disable muzzle flash lights in first person
//cl_muzzleflash_dlight_1st 1 // Enable muzzle flash lights in first person
tracer_extra 0 // Remove extra fluff to bullet lines that make them thicker
//tracer_extra 1 // Make bullet lines more visible, low performance impact
r_drawtracers_firstperson 1 // Enable first person tracers, low performance impact
//r_drawtracers_firstperson 0 // Do not draw tracers when you are in first person
cl_show_splashes 1 // Enable water splashes
//cl_show_splashes 0 // Disable water splashes
cl_fasttempentcollision 20 // Check every 20 frames for collisions on syringes, shell ejection, blood,
                           // and some other effects
glow_outline_effect_enable 1 // Enable ally and objective x-ray effect
//glow_outline_effect_enable 0 // Disable to save frames
pyro_dof 0 // Skip a SSAO depth pass for pyrovision
pyro_vignette 0 // Disable vignette for pyrovision

// '-- Water --'
r_cheapwaterstart 400 // The distance at which transitionary cheap water starts, less reflective water
//r_cheapwaterstart 0 // Use cheap water as much as possible
//r_cheapwaterstart 3000 // Do not use cheap water
r_cheapwaterend 1000 // The distance at which fully cheap water starts. Does not reflect or refract and
                     // it is solid
//r_cheapwaterend 0.1 // Use cheap water as much as possible
//r_cheapwaterend 5000 // Do not use cheap water
r_waterforceexpensive 0 // Do not force expensive water
//r_waterforceexpensive 1 /// Force higher quality water
r_WaterDrawReflection 0 // Water reflections disabled for more performance
//r_WaterDrawReflection 1 // Enable water reflections
r_waterforcereflectentities 0 // Do not forcing entity water reflections
//r_waterforcereflectentities 1 // Enable entity water reflections
r_WaterDrawRefraction 1 // Enable water refraction as water is hard to look at otherwise
//r_WaterDrawRefraction 0 // Disable water refraction for maximum FPS
r_ForceWaterLeaf 1 // Draw half of the leaf for water to optimize culls

// '-- Particles --'
cl_particle_batch_mode 1 // Use default particle batch mode due to buggy tracers on mode 2
//cl_particle_batch_mode 2 // Batch particles with optimized mode
tf_particles_disable_weather 1 // Disable rain, snow and ash particles
//tf_particles_disable_weather 0 // Increases number of particle systems on some maps, less FPS
mat_reduceparticles 1 // Reduce number of particles, but it only helps a little bit because the real
                      // performance impact comes from creating particle systems
//mat_reduceparticles 0 // Use the full number of particles
cl_new_impact_effects 0 // Use the old particle system which is lighter
//cl_new_impact_effects 1 // Use the new particle system which is heavier
r_drawflecks 0 // Do not create particle systems when things hit surfaces, increases FPS and reduces
               // distractions
//r_drawflecks 1 // Draw flecks from impacts
r_particle_sim_spike_threshold_ms 0 // Early finish to unused particle performance stats

// '-- Post Processing --'
mat_postprocessing_combine 1 // Combine post processing effects
mat_hdr_level 0 // LDR
//mat_hdr_level 1 // LDR and bloom
//mat_hdr_level 2 // HDR and bloom
mat_non_hdr_bloom_scalefactor 0 // Completely disable bloom on LDR
//r_bloomtintexponent 2.2 // Intensity of bloom effect
//mat_bloom_scalefactor_scalar 1 // Intensity of bloom emitters
building_cubemaps 1 // Disables various post processing effects
//building_cubemaps 0 // Allow for post processing effects
mat_colorcorrection 0 // Disable color correction
//mat_colorcorrection 1 // Enable color correction, pretty much free effect
mat_colcorrection_disableentities 1 // Disable entity color correction
//mat_colcorrection_disableentities 0 // Enable entity color correction

// '-- Motion Blur --'
// These settings will adjust the blurring effect from rotation and movement

mat_motion_blur_enabled 0 // Disable motion blur
//mat_motion_blur_forward_enabled 0 // Disable forward motion blur
//mat_motion_blur_strength 1 // Adjust overall blur strength
//mat_motion_blur_rotation_intensity 0.4 // Adjust blur caused by rotational motion

// '-- Antialiasing --'
// These settings will adjust the smoothing of jagged edges

//mat_antialias 0 // Do not do antialiasing (commented due to HUD and overlay glitches, set it once and then comment it out)
mat_aaquality 0 // Disable CSAA
mat_alphacoverage 0 // Disable alpha-to-coverage, which improves AA on thin overlapping surfaces
mat_software_aa_strength 0 // Do not do software AA
mat_software_aa_strength_vgui 0 // Do not do software AA on the HUD
mat_trilinear 1 // Use trilinear as it improves texture filtering for little
mat_forceaniso 0 // Disable higher levels of anisotropic filtering

// '-- Characters --'
// These settings will adjust the characters in the game
r_flex 1 // Enable facial animations. Requires more bones to be setup on CPU
//r_flex 0 // Disable facial animations
flex_rules 1 // Enable facial animations
//flex_rules 0 // Disable facial animations
r_eyes 1 // Draw character eyes. Actually a noticeable FPS decrease
//r_eyes 0 // Disable eyes
r_teeth 1 // Render teeth
//r_teeth 0 // Do not render teeth, small FPS boost
cl_SetupAllBones 0 // Do not force every animation component of a model to be set up
//cl_SetupAllBones 1 // Set up animation components that were mistakedly skipped
flex_smooth 0 // Do not smooth facial animations
//flex_smooth 1 // Smooth facial animations
mp_usehwmmodels -1 // Do not use or load high quality characters
//mp_usehwmmodels 0 // Use high quality characters if supported
mp_usehwmvcds -1 // Do not use or load high quality character facial expressions
//mp_usehwmvcds 0 // Use high quality characters facial expressions if supported
r_glint_procedural 0 // Use the default eye glinting method
//r_glint_procedural 1 // Use CPU eye glinting, for fast CPUs and slow GPUs
blink_duration 0.2 // Duration of an eye blink. Do not set to 0. Does not affect performance.
r_eyemove 1 // Control if character eyes should move, does not really affect performance
tf_clientsideeye_lookats 1 // Control if character eyes should look at you, does not really affect
                           // performance

// '-- Decals --'
r_decals 9 // Allow to check bullet spread (must be the same as mp_decals)
//r_decals 0 // Disable decals
//r_decals 96 // Optimized high decal count
//r_decals 2048 // Maximum decal count
mp_decals 9 // Allow to check bullet spread (must be the same as r_decals)
//mp_decals 0 // Disable decals
//mp_decals 96 // Optimized high decal count
//mp_decals 2048 // Maximum decal count
r_drawbatchdecals 0 // Do not batch decals with low max decal count
//r_drawbatchdecals 1 // Batch decals with decal count >18
r_spray_lifetime 2 // Keep sprays for 2 rounds
//r_spray_lifetime 0 // Clear sprays immediately
cl_playerspraydisable 0 // Enable player sprays
//cl_playerspraydisable 1 // Disable player sprays
r_decal_cullsize 20 // Optimized decal cullsize if you want to still see decals from reasonably far away.
//r_decal_cullsize 256 // Hide decals unless you are very close to them. This allows to check spread
                       // without decal rendering elsewhere.
r_decal_cover_count 1 // Remove decal when there is 1 decal in its place/close to completely covering it
//r_decal_cover_count 4 // Allow for more decals covering each other
r_decal_overlap_area 0.4 // Remove decal when there is another decal barely covering it
//r_decal_overlap_area 0.8 // Alow for decals to overlap each other more
r_decal_overlap_count 0 // Do not allow decals to overlap each other
//r_decal_overlap_count 3 // Allow for 3 decals to overlap each other
r_drawmodeldecals 0 // Disable blood decals on bodies. Will prevent new objects to be created that decals apply onto.
//r_drawmodeldecals 1 // Enable blood decals for better determining how hurt someone is.
r_renderoverlayfragment 1 // Enable overlays to see some decal based logos and posters on walls
//r_renderoverlayfragment 0 // Disable overlays, small performance increase
r_maxmodeldecal 9 // Optimize maximum model decal count
r_overlayfadeenable 0 // Fading overlays can cause small performance issues
r_overlayfademax 1000 // Optimize overlay fades if it happens to be enabled
r_overlayfademin 999 // Optimize overlay fades if it happens to be enabled

// '-- Gibs --'
cl_burninggibs 0 // Disable burning gibs, performance impact
//cl_burninggibs 1 // Enable burning gibs for realism
props_break_max_pieces -1 // Break gibs and some props into the pieces they were designed to break into
//props_break_max_pieces 0 // Disables gibs and prop breaking
violence_hgibs 1 // Disabling any of these CVars enables silly gibs, which result in lower performance
violence_agibs 1 // ^
violence_hblood 1 // ^
violence_ablood 1 // ^

// '-- Props --'
r_decalstaticprops 0 // Do not use some lighting data for static props, disable decals on static props
//r_decalstaticprops 1 // Use proper ambient lighting data for static props, enable decals on static props
cl_phys_props_enable 0 // Disable client side physics props
//cl_phys_props_enable 1 // Enable client side physics props
cl_phys_props_max 20 // Reduce the physics props limit to a sane one for TF2
//cl_phys_props_max 300 // Allow all physics props
cl_phys_props_respawndist 900 // Do not spawn props until we can see them
//cl_phys_props_respawndist 3500 // Respawn physics props at a high distance
cl_phys_props_respawnrate 120 // Respawn physics props at a slower rate
//cl_phys_props_respawnrate 60 // Respawn physics props faster
r_propsmaxdist 900 // Maximum distance from where client side physics props are visible
//r_propsmaxdist 3000 // Always render client side physics props
r_drawdetailprops 0 // Disable detail props for saving a good bit of FPS
//r_drawdetailprops 1 // Enable sprites, grass etc
//r_drawdetailprops 2 // Draw detail props with wireframe
cl_detaildist 900 // Draw detail props up to this distance
//cl_detaildist 3000 // Always draw detail props
//cl_detaildist 0 // No detail props
cl_detailfade 0 // Do not fade in detail props
//cl_detailfade 900 // Set to cl_detaildist to always be fading
//cl_detailfade 400 // Fade in detail props to reduce pop in
r_staticprop_lod -1 // Automatic LOD for props (fade between the most optimal LODs at a certain distance)
//r_staticprop_lod 0 // Force highest LOD (high quality with no fading)
//r_staticprop_lod 63 // Force lowest LOD (lowest quality)
r_PhysPropStaticLighting 1 // Use premade lighting for props, increases FPS

// '-- Ragdolls --'
cl_ragdoll_collide 0 // Disable ragdoll collisions
cl_ragdoll_fade_time 0 // Remove ragdoll fade out delay
//cl_ragdoll_fade_time 15 // Fade out ragdolls in 5 seconds
cl_ragdoll_forcefade 1 // Effectively disables ragdolls by instantly fading them
//cl_ragdoll_forcefade 0 // Enable ragdolls
cl_ragdoll_physics_enable 0 // Disable ragdoll physics, where most of the performance from ragdolls comes
                            // from
//cl_ragdoll_physics_enable 1 // Enable ragdolls physics for meaningful ragdolls
g_ragdoll_fadespeed 10000 // The rate of ragdoll fading (higher is faster fading)
g_ragdoll_lvfadespeed 10000 // The rate of ragdoll fading in low violence mode (higher is faster fading)
ragdoll_sleepaftertime 0 // Instantly sleep ragdolls

// '-- General --'
mat_reducefillrate 1 // Simplify material shading
//mat_reducefillrate 0 // Increase shading quality
mat_bumpmap 1 // Enable bumpmaps
//mat_bumpmap 0 // Disable bumpmap materials
mat_specular 1 // Enable specular
//mat_specular 0 // Disable specular materials
mat_viewportscale 1 // Adjust render resolution (adjust as a % from 1.0 to 0.1 in increments of 0.1 or 0.05). This is
                    // useful for if your GPU struggles to render a lot of pixels
mat_viewportupscale 1 // Upscale when using mat_viewportscale
r_3dsky 1 // Enable 3D sky
//r_3dsky 0 // Disable 3D sky
r_dopixelvisibility 1 // Do visibility testing for glows, halos and pretty lights
//r_dopixelvisibility 0 // Do not do CPU intensive pixelvis
r_drawpixelvisibility 0 // Do not draw debug for partial visibility checking
r_pixelvisibility_partial 0 // Do not use a costly precise partial visibility algorithm
//r_pixelvisibility_partial 1 // Use partial visibility algorithm
cl_drawmonitors 0 // Do not draw monitors
cl_jiggle_bone_framerate_cutoff 67 // Disable jigglebones if we are under the optimal framerate
//cl_jiggle_bone_framerate_cutoff 0 // Always disable jigglebones
mat_picmip 1 // Use less memory in a 32-bit process
//mat_picmip 2 // Use lowest quality textures
//mat_picmip -1 // Use highest quality textures

// '-- Ropes --'
r_ropetranslucent 1 // Simulate ropes
rope_rendersolid 1 // Render solid part of ropes
rope_solid_minalpha 0 // Skip drawing non-solid part of ropes
rope_solid_minwidth 0 // ^
rope_smooth 0 // Skip a long smoothing operation for ropes
rope_subdiv 0 // Skip heavy loops for rope subdivisions
rope_collide 0 // Skip CPU heavy world collisions for ropes
rope_wind_dist 0 // Do not apply CPU intensive wind to ropes
rope_averagelight 1 // Only use average light, instead of an extra max intensity average with 0

// '-- Optimization --'
// These settings will optimize TF2 without having any effects to the user

fps_max 300 // Prevent a possible memory leak with fps_max 0 and set to 300 because some systems in
            // Source assume an FPS limit of 300
engine_no_focus_sleep 0 // Do not limit FPS when the engine is not focused because the focus detection
                        // can be buggy on some systems or while streaming and may limit your FPS,
                        // without you knowing
//engine_no_focus_sleep 50 // Power savings while alt-tabbed out of TF2
r_fastzreject 0 // Modern GPUs (hardware feature level d3d10) do not need the help
//r_fastzreject 1 // Renders first pass of a scene with a z-buffer on the CPU and then has the GPU
                // quickly render the scene in a second pass, with the visible parts of the scene already
                // calculated
r_entityclips 1 // Clip entities
disp_dynamic 0 // Do not use dynamic meshses for world geometry (displacements)
r_hunkalloclightmaps 0 // If a lightmap cannot be fit into the hunk, use dynamic memory
//r_hunkalloclightmaps 1 // Allocate lightmaps in the hunk
r_frustumcullworld 1 // Cull on world draw
r_worldlistcache 1 // Cache some world rendering
mat_clipz 1 // Clips what is drawn for a performance improvement
r_occludermincount 1 // Force using at least 1 occluder for performance balance between open scenes and
                       // cluttered ones
//r_occludermincount 0 // Do not force using any occluders
r_lightcache_zbuffercache 1 // Load z cache data with the map
r_drawopaquestaticpropslast 1 // Ensure that the modern and currently preferred rendering method is used
mat_tonemapping_occlusion_use_stencil 0 // Do not use stencil buffer for occlusion queries
//mat_tonemapping_occlusion_use_stencil 1 // Use stencil buffer for iGPUs
host_flush_threshold 0 // Early finish to a Xbox 360 only flush task
r_norefresh 1 // Do not store a useless and unused frame time variable
fast_fogvolume 1 // Use optimized fog rendering
r_pixelfog 1 // Use a pixel shader for fog if possible
mat_bufferprimitives 1 // Buffer primitives
mat_compressedtextures 1 // Allow for compressed textures
mat_filterlightmaps 1 // Filter lightmaps
mat_filtertextures 1 // Filter textures
mat_mipmaptextures 1 // Mipmap textures
mat_use_compressed_hdr_textures 1 // Use compressed HDR textures
r_occlusion 1 // Use CPU to have the GPU skip rendering things you cannot see
//r_occlusion 0 // Use less CPU at the cost of more GPU usage
mat_levelflush 0 // Do not flush temp mem at the beginning of a level

// '-- OpenGL --'
gl_pow2_tempmem 1 // Makes memory allocation behavior more stable
gl_batch_tex_creates 1 // Batch texture creation and removal to reduce calls
gl_batch_tex_destroys 1 // ^
gl_minimize_rt_tex 1 // Minimize rectangle textures
gl_mtglflush_at_tof 1 // Makes frames output smoother, at less FPS
gl_debug_output 0 // Disable debug messages
gl_magnify_resolve_mode 1 // Use fastest resolve mode when up scaling too
gl_paircache_rows_lg2 11 // Increase shader pair cache size
gl_paircache_ways_lg2 5 // Keep some loops small by using minimum ways size

// '--- HUD ---'
// '-- General --'
cl_hud_playerclass_use_playermodel 0 // Disable live player model in HUD, also partially fixes animation bug
//cl_hud_playerclass_use_playermodel 1 // Enable live player model in HUD
//cl_hud_minmode 1 // HUD min mode
//hud_autoreloadscript 1 // Autoreload
//hud_fastswitch 1 // Weapon switch behavior
                   // 0 - PC Buckets
                   // select weapons from the side of your screen, fire to confirm
                   // 1 - PC Fast Switch
                   // fast switch for PC buckets (no fire to confirm)
                   // 2 - Buckets Plus:
                   // fast switch
                   // weapon selection window comes up at the middle of your screen
                   // can select weapons without ammo (but not switch to them)
                   // 3 - Carousel scroll:
                   // fast switch
                   // slot 1 = last weapon, slot 2 = next weapon,
                   // slot 3 = swap weapon, slot 4 = previous weapon
//tf_mm_dashboard_slide_panel_step 20 // Change the speed of the matchmaking panel
tf_item_inspect_model_auto_spin 1 // Auto spin items in the inspect view
//tf_item_inspect_model_auto_spin 0 // Do not auto spin items in the inspect view
//tf_item_inspect_model_spin_rate 30 // Rate at which items spin in the inspect view
tf_quest_map_tuner_wobble_magnitude 0.01 // Enable red tuner at the bottom
//tf_quest_map_tuner_wobble_magnitude 0 // Disable the red tuner on the contracker
//tf_build_menu_controller_mode 1 // Use controller style engineer build menu
//tf_disguise_menu_controller_mode 1 // Controller disguise menu
//tf_simple_disguise_menu 0 // Concise disguise menu
//tf_colorblindassist 1 // Colorblind mode
//cl_disablehtmlmotd 1 // Disable HTML MOTDs (ads, music player, rules, fancy server intros)
//hud_classautokill 0 // No suicide on class change
//tf_halloween_bonus_ducks_cooldown 20 // Delay in seconds before BONUS DUCKS sound again
//tf_healthicon_height_offset 10 // Offset of heath icon
//tf_hud_no_crosshair_on_scope_zoom 1 // Hide crosshair on scope
//tf_hud_num_building_alert_beeps 3 // Numbers of beeps when an alert pops up on an engie building
//tf_hud_show_servertimelimit 1 // Show server map time
//tf_hud_target_id_alpha 120 // Transparency of target ID
//tf_hud_target_id_disable_floating_health 1 // Hide floating health bar
//tf_hud_target_id_offset 0 // Vertical offset of target ID
//tf_hud_target_id_show_avatars 2 // Show avatars: 0 - never, 1 - for everyone, 2 - for friends

// '-- Chat --'
//hud_saytext_time 10 // How long in seconds chat messages stay on screen
//cl_showtextmsg 1 // Enable chat
//cl_showtextmsg 0 // Disable chat
//cl_chatfilters 63 // Chat Filter - enable parts of chat:
                    // join/leave (1), name change (2), chat (4), server messages (8), team change (16),
                    // achievements (32)
                    // Add a combination of these numbers together to enable that combination
                    // for example, name change (2) + team change (16) = 18
                    // 0 for everything disabled
//cl_mute_all_comms 0 // Disable voice for muted players
//cl_mute_all_comms 1 // Disable text and voice for muted players
//hud_deathnotice_time 5 // How long in seconds a killfeed item stays on screen
//tf_chat_popup_hold_time 5 // How long party messages appear on the main menu?

// '-- Backpack --'
tf_time_loading_item_panels 0.0001 // Decrease time spent per frame loading item panels
tf_backpack_page_button_delay 0.25 // Decrease button delay for moving items
//tf_item_selection_panel_sort_type 1 // Alphabetically sort loadout options

// '-- Crosshair --'
//cl_crosshairalpha 100 // Crosshair translucency (0 to 255)
//cl_crosshairalpha 255 // Disable transparency for lowend computers
//cl_crosshair_red 156 // Crosshair red (0 to 255)
//cl_crosshair_green 39 // Crosshair green (0 to 255)
//cl_crosshair_blue 176 // Crosshair blue (0 to 255)
//cl_crosshair_scale 64 // Size of crosshair
//cl_observercrosshair 0 // Disable crosshair in spectator
//crosshair 0 // Disable crosshair

// '-- Killstreaks --'
//cl_hud_killstreak_display_alpha 100 // Adjust the translucency of the killstreak banner (0 to 255)
//cl_hud_killstreak_display_alpha 255 // Disable transparency for lowend computers
//cl_hud_killstreak_display_fontsize 1 // Killstreak font size (0 to 2)
//cl_hud_killstreak_display_time 3 // Killstreak display time in seconds
//cl_hud_killstreak_display_time 0 // Disable killstreak banner

// '-- Notifications --'
//cl_notifications_max_num_visible 1 // Reduce notification clutter
//cl_notifications_move_time 0.1 // Make notification transition shorter
//cl_notifications_show_ingame 0 // Do not show notifications in game
//con_drawnotify 0 // Disable drawing notification area
//tf_notifications_push_bottom 1 // Push notifications to the bottom of the view?
//cl_vote_ui_active_after_voting 1 // Keep the vote UI up after voting
//cl_vote_ui_show_notification 0 // Hide vote UI notifications
//tf_hud_notification_duration 2 // How long notifications should display

// '-- Contracts --'
//tf_contract_competitive_show 2 // During competitive matches, contract visibility:
                                 // 0 - never
                                 // 1 - all
                                 // 2 - active only
//tf_contract_progress_show 1 // During all matches, contract visibility:
                                 // 0 - never
                                 // 1 - all
                                 // 2 - active only
//tf_quest_turn_in_confirm_opt_out 1 // Do not show bonus points missing warning for contracts
//tf_quest_notification_line_delay 1 // Voice line delay after contract

// '-- Achievements --'
//hud_achievement_glowtime 1 // Glow achievements for a little while shorter
//hud_achievement_tracker 2 // Achievements tracked at once
//hud_achievement_count 4 // Max achievements shown on HUD

// '-- Info --'
// Adding additional HUD elements decreases FPS by a small amount

//cl_showfps 2 // FPS meter, 1 = show, 2 = smooth
//cl_showpos 1 // Current position, angle and velocity
//cl_showbattery 1 // Battery meter
//cl_showblocking 1 // Show blocking disk operations on FPS panel
//cl_mvm_wave_status_visible_during_wave 1 // MvM wave information during the wave

// '- Netgraph -'
//net_graph 0 // netgraph display
              // 0 = no graph, 1 = text only, 2 = graph, 3 = legend + choke/loss, 4 = server perf stats
//net_graphpos 1 // the horizontal position of the netgraph
                 // 0 = left, 1 = right, 2 = middle
                 // anything else will set the x coordinate of the graph's left edge
//net_graphheight 64 // height of the text part of the graph
//net_graphproportionalfont 1 // scale fonts as the screen resolution goes up
//net_scale 5 // the height of the graph portion
net_graphsolid 0 // draw height ticks as single ticks (small optimization)
//net_graphsolid 1 // Revert back to the Half-Life 1 behavior of drawing a full rectangle
//net_graphtext 1 // draw text fields
//net_graphmsecs 400 // over how many milliseconds should the text area measure
//net_graphshowlatency 1 // show the latency part of the graph
//net_graphshowinterp 1 // show the interpolation part of the graph

// '-- Tutorial --'
//tf_comp_welcome_hide_forever 1
//tf_casual_welcome_hide_forever 1
//cl_ask_favorite_opt_out 1
//cl_ask_blacklist_opt_out 1
//replay_quitmsg_dontaskagain 1
//cl_ask_bigpicture_controller_opt_out 1
//tf_explanations_store 1
//tf_explanations_discardpanel 1
//tf_explanations_backpackpanel 1
//tf_explanations_charinfopanel 1
//tf_explanations_craftingpanel 1
//tf_explanations_charinfo_armory_panel 1
//tf_training_has_prompted_for_forums 1
//tf_training_has_prompted_for_loadout 1
//tf_training_has_prompted_for_options 1
//tf_training_has_prompted_for_training 1
//tf_training_has_prompted_for_offline_practice 1
//cl_showhelp 0
//tf_taunt_always_show_hint 0
//sb_dontshow_maxplayer_warning 1
//tf_coach_request_nevershowagain 1
//tf_show_maps_details_explanation_count 0
//tf_show_taunt_explanation_in_class_loadout 0
//tf_show_preset_explanation_in_class_loadout 0
//cl_hud_playerclass_playermodel_showed_confirm_dialog 1
//tf_find_a_match_hint_viewed 1
//tf_quest_map_intro_viewed 1
//tf_warpaint_explanation_viewed 1

// '-- Console --'
con_nprint_bgalpha 100 // Console translucency (0 to 255)
//con_nprint_bgalpha 255 // Disable transparency for lowend computers
con_nprint_bgborder 1 // Console border
//con_nprint_bgborder 0 // Disable border on lowend computers

// '--- View --'
fov_desired 90 // See more of the battlefield
//fov_desired 75 // Render less for very lowend computers
//r_drawviewmodel 1 // Draw weapon viewmodel model
//r_drawviewmodel 0 // Hide weapon viewmodel
//viewmodel_fov 70 // FOV for your viewmodel, recommend to adjust from 54 to 70
//tf_use_min_viewmodels 0 // Use default viewmodel position
//tf_use_min_viewmodels 1 // Move viewmodel to cover less of the screen
//cl_first_person_uses_world_model 0 // Draw viewmodel
//cl_first_person_uses_world_model 1 // Draw character world model instead of viewmodel
//tf_medieval_thirdperson 1 // Third person view in medieval mode

// '--- Misc ---'
bugreporter_uploadasync 1 // Upload bug reporter attachments asynchronously

// '--- Memory ---'
lzma_persistent_buffer 1 // Keep the LZMA compression system in memory to prevent reloads of it

// '--- Filesystem ---'
// '-- Sizes --'
filesystem_buffer_size 262144 // Use a 256KB buffer for the filesystem
filesystem_max_stdio_read 256 // Read up to our buffer (256KB)

// '-- General --'
filesystem_native 1 // Use native filesystem calls if available
filesystem_unbuffered_io 1 // Allow for unbuffered IO where appropriate

// '-- Async --'
mod_load_anims_async 1 // Enable async animation loading
mod_load_mesh_async 1 // Enable async mesh loading
mod_load_vcollide_async 1 // Enable async vcollide loading
mod_touchalldata 0 // Ensure async loading
mod_forcedata 0 // Ensure async loading
mod_forcetouchdata 1 // Enable aggressive caching/preloading

// '--- Sound ---'
// '-- Hitsounds --'
//tf_dingalingaling_lasthit 1 // Play killsounds
//tf_dingaling_lasthit_pitchmaxdmg 127 // Pitch for killsound on >=150 damage
//tf_dingaling_lasthit_pitchmindmg 65 // Pitch for killsound on <=10 damage
//tf_dingaling_lasthit_volume 0.7 // Killsound volume
//tf_dingalingaling_last_effect 0 // Which sound to use for the killsound
//tf_dingaling_lasthit_pitch_override -1 // Pitch for all killsounds, if set
//tf_dingalingaling 1 // Play hitsounds
//tf_dingaling_pitchmaxdmg 127 // Pitch for hitsound on >=150 damage
//tf_dingaling_pitchmindmg 65 // Pitch for hitsound on <=10 damage
//tf_dingalingaling_repeat_delay 0 // The delay in seconds before playing the hitsound again
//tf_dingaling_volume 0.7 // Hitsound volume
//tf_dingalingaling_effect 0 // Which sound to use for the hitsound
//tf_dingaling_pitch_override -1 // Pitch for all hitsounds, if set

// '-- Threading --'
snd_async_fullyasync 1 // Play sounds independently of main engine work
snd_async_minsize 0 // Do not wait for audio file loading for SSDs
//snd_async_minsize 65536 // Wait until 64K of audio has been loaded for HDDs
//snd_async_minsize 262144 // Wait longer for CPUs with less than 4 cores
snd_mix_async 1 // Use another thread to mix sounds
//snd_mix_async 0 // Disable async mixing on CPUs with less than 4 cores
phonemedelay 0 // Do not delay phonemes with an async sound system
//phonemedelay 0.1 // Delay phonemes when async mixing is disabled

// '-- General --'
//volume 1 // Set the master volume
//snd_musicvolume 1 // Set music volume
snd_delay_sound_shift 0 // Do not delay sounds
//snd_delay_sound_shift 0.01 // Use a tiny time to allow for better synced sounds. No performance benefit.
//snd_delay_sound_shift 0.1 // Allow for better synced sounds on slow CPUs. No performance benefit.
snd_mixahead 0.05 // Keep sounds for 0.05 seconds to mix them
//snd_mixahead 0.08 // Balance between sound delay and less demand on the CPU
//snd_mixahead 0.2 // Use a long value to greatly decrease demand on CPU for slow CPUs

// '-- Quality --'
snd_pitchquality 1 // Use interpolated mixer for sound, noticeable sound quality increase
//snd_pitchquality 0 // Use linear mixer for sound, little performance benefit
snd_disable_mixer_duck 0 // Enable mixing sounds to adjust volume
//snd_disable_mixer_duck 1 // Disable some sounds being mixed to be louder than others
snd_surround_speakers -1 // Autodetect speaker configuration from OS
//snd_surround_speakers 0 // Force headphones
//snd_surround_speakers 2 // Force mono/stereo
//snd_surround_speakers 4 // Force quad
//snd_surround_speakers 5 // Force 5.1
//snd_surround_speakers 7 // Force 7.1
snd_legacy_surround 0 // Disable surround sound effect
//snd_legacy_surround 1 // Enable surround sound effect. Only works with quad and better.

// '-- Spatialization --'
dsp_enhance_stereo 0 // Disable spatial DSP effects and delays
//dsp_enhance_stereo 1 // Enable for slight increase in sound quality, most noticeable on multispeaker
                       // systems

dsp_slow_cpu 0 // Use enhanced positional effects
//dsp_slow_cpu 1 // Disable initialization of spatialization
snd_spatialize_roundrobin 1 // Spatialize sounds every 2 frames, less performance benefit.
//snd_spatialize_roundrobin 3 // Spatialize sounds every 8 frames (2^3) using round-robin algorithm.
                              // Pretty reasonable performance benefit, but delay in spatialization.
//snd_spatialize_roundrobin 0 // Spatialize every frame
dsp_room 0 // Disable automatic DSP
//dsp_room 1 // Enable automatic DSP. Big performance hit
dsp_facingaway 30 // Use a DSP effect for sounds you are facing away from
//dsp_facingaway 0 // Disable the facing away DSP effect
dsp_speaker 50 // Administrator effect
//dsp_speaker 0 // Disable administrator effect
dsp_water 14 // Water muffling effect
//dsp_water 0 // Disable water muffling effect
dsp_spatial 40 // Spatial effect for positional audio
//dsp_spatial 0 // Disable spatial effect
dsp_db_mixdrop 0.6 // Use enhanced volume scaling
dsp_db_min 80 // ^
dsp_mix_min 0.24 // ^
dsp_mix_max 0.78 // ^
//dsp_db_mixdrop 1 // Disable volume scaling
//dsp_db_min 0 // ^
//dsp_mix_min 0 // ^
//dsp_mix_max 0 // ^

// '-- Optimization --'
snd_cull_duplicates 0 // Do not try to find duplicate playing sounds, it is a lot of work on the CPU
voice_steal 2 // Reuse unimportant sound channels, increases FPS and sound quality
voice_buffer_ms 100 // Buffer voice stream for better quality, at a slight delay
snd_noextraupdate 1 // Do not update sound twice
snd_defer_trace 1 // Defer DSP spatialization to the next frame
phonemefilter 0.01 // Do not box filter phonemes
phonemesnap 0 // Do not crossfade a second phoneme on any LOD

// '--- Input ---'
in_usekeyboardsampletime 1 // Determine key time from smoothed frametime
// '-- Mouse --'
//m_pitch 0.022 // Pitch factor
//m_yaw 0.022 // Yaw factor
//sensitivity 3 // Mouse sensitivity
//m_limitedcapture_workaround 1 // Workaround for mouse capture issues in Windows 10
//m_filter 0 // Do not average mouse input over two frames
//m_mousespeed 0 // Disable Windows mouse acceleration
//m_rawinput 1 // Use raw input from mouse
//m_customaccel 0 // custom mouse acceleration
                  // 0 - no custom acceleration
                  // 1 - mouse acceleration = min(m_customaccel_max, pow(raw_mouse_delta, m_customaccel_exponent) * m_customaccel_scale + sensitivity)
                  // 2 - Same as 1, with but x and y sensitivity are scaled by m_pitch and m_yaw respectively.
                  // 3 - mouse accelartion = pow(raw_mouse_delta, m_customaccel_exponent - 1) * sensitivity
//m_customaccel_scale 0.04 // ^
//m_customaccel_max 0 // ^
//m_customaccel_exponent 1 // ^
//zoom_sensitivity_ratio 0.793471 // Use same sensitivity as when unscoped
cl_idealpitchscale 1.3 // When changing pitch, use this rate

echo "    ***************************    "
echo "    ***************************    "
echo "    ** mastercomfig 4.5.0 loaded **    "
echo "    ***************************    "
echo "    ***************************    "

// '--- Presets ---'
// Presets are overrides that set alternative values for easy customization.
// You can uncomment (remove the // before exec) to make a preset default and applied on load.
// Or, you can run "exec presetname" (without the quotes) to customize the config in-game.
// It's recommended to use "exec" in console on the main menu, as changing settings while in a match
// may cause stability and performance issues.

// You should only be using one preset at a time, except for igpu and custom. Those two can be used
// with any other preset. You technically can use multiple presets but it wouldn't make a lot of sense,
// as they have conflicting goals, like maxquality and maxperformance together won't really change much.

//exec maxquality // Maximum quality preset - Maximum quality without caring about FPS too much
                  // Rename dxsupport_override.cfg in the mastercomfig folder to dxsupport_override0.cfg
//exec comp // Competitive performance preset - Max FPS without visibility issues or bugs
//exec compquality // Competitive quality preset - Maximizes advantage through enabling visual effects
//exec maxperformance // Maximum performance preset - Max FPS without caring about visibility or possible bugs
                      // Rename dxsupport_override.cfg in the mastercomfig folder to dxsupport_override0.cfg
                      // Then rename dxsupport_override_maxfps.cfg to dxsupport_override.cfg
//exec igpu // iGPU preset - Optimizations for Intel integrated graphics chips or weak/old GPUs
            // maxperformance or comp preset recommended
//exec custom // Personal extra preset - For changing values in config without update pains
